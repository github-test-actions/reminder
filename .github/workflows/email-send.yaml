name: Push to Master Workflow

on:
  push:
    branches:
      - master

jobs:
  zip-and-email:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: habib
          POSTGRES_PASSWORD: postgres
          # POSTGRES_DB: reminder_test
        options: >-
          --health-cmd="pg_isready -U habib"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      DATABASE_TEST: reminder_test
      DATABASE_USERNAME: habib
      DATABASE_PASSWORD: postgres
      RAILS_ENV: test

    steps:
      - name: List Files Before
        run: |
          ls -a
          pwd
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: List Files After
        run: |
          ls -a
          pwd
      # debug the Username and email settings
      - name: Debug Inputs
        run: |
          echo "Username: ${{ secrets.EMAIL_USERNAME }}"
      # Step 2: Setup Ruby
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.5.0
          bundler-cache: true
      # Step: 3: Install dependency
      # - name: Install dependency
      #   run: |
      #     gem install bundler -v 2.3.26
      #     bundle install
      # Step 5: Prepare the test database

    # Step 4: Set up the database configuration
      # - name: Configure database
      #   run: |
      #     sed -i 's/database:.*/database: reminder_test/' config/database.yml
      #     sed -i 's/username:.*/username: habib/' config/database.yml
      #     sed -i 's/password:.*/password: postgres/' config/database.yml

      - name: Set up test database
        run: |
          bundle exec rake db:create db:schema:load
      - name: Run Tests
        # env:
        #   DATABASE_TEST: reminder_test
        #   DATABASE_USERNAME: habib
        #   DATABASE_PASSWORD: postgres
        #   RAILS_ENV: test
        run: |
          rspec spec/models/reminder_spec.rb
      # Step 1: Check out the repository
      # Step 5: Zip a specific folder
      #      mkdir -p zipped
  #     - name: Zip specific folder
  #       run: |
  #         pwd
  #         zip -r ./tmp/locales.zip ./config/locales
  #     - name: List Files After Zip
  #       run: ls -la ./tmp
  #     - name: make zip ymal
  #       id: zip_file
  #       run: |
  #         found_file=$(ls -t ./tmp/*.zip | head -n 1)
  #         echo "found_file=${found_file}" >> $GITHUB_ENV

  #     - name: Upload latest file
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: found_file_name
  #         path: ${{ env.found_file }}

  # just-email:
  #   needs: zip-and-email
  #   name: check name just email
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Step 6: Send an email with the zip file attached
  #     - name: Download latest file
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: found_file_name
  #     - name: Debug Artifact Location
  #       run: |
  #         echo "Workspace contents after download:"
  #         ls -la
  #         echo "Contents of found_file_name directory:"
  #     - name: Send email with attachment
  #       uses: dawidd6/action-send-mail@v3
  #       with:
  #         server_address: smtp.gmail.com
  #         server_port: 587
  #         username: ${{ secrets.EMAIL_USERNAME }}
  #         password: ${{ secrets.EMAIL_PASSWORD }}
  #         subject: Git Repository Folder
  #         body: "Attached is the zipped folder from the latest push to master."
  #         to: salihaansar99@gmail.com
  #         cc: habib_tum@ymail.com
  #         from: ${{ secrets.EMAIL_USERNAME }}
  #         attachments: ./*.zip
